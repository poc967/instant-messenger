[{"/Users/patrickoconnor/Documents/code/instant-messenger/client/src/index.js":"1","/Users/patrickoconnor/Documents/code/instant-messenger/client/src/reportWebVitals.js":"2","/Users/patrickoconnor/Documents/code/instant-messenger/client/src/App.js":"3","/Users/patrickoconnor/Documents/code/instant-messenger/client/src/store.js":"4","/Users/patrickoconnor/Documents/code/instant-messenger/client/src/socket.js":"5","/Users/patrickoconnor/Documents/code/instant-messenger/client/src/components/PrivateRoute.js":"6","/Users/patrickoconnor/Documents/code/instant-messenger/client/src/components/LogIn.js":"7","/Users/patrickoconnor/Documents/code/instant-messenger/client/src/actions/authActions.js":"8","/Users/patrickoconnor/Documents/code/instant-messenger/client/src/components/Wrapper.js":"9","/Users/patrickoconnor/Documents/code/instant-messenger/client/src/reducers/index.js":"10","/Users/patrickoconnor/Documents/code/instant-messenger/client/src/components/SignUpModal.js":"11","/Users/patrickoconnor/Documents/code/instant-messenger/client/src/actions/errorActions.js":"12","/Users/patrickoconnor/Documents/code/instant-messenger/client/src/actions/types.js":"13","/Users/patrickoconnor/Documents/code/instant-messenger/client/src/components/NavigationBar.js":"14","/Users/patrickoconnor/Documents/code/instant-messenger/client/src/components/Profile.js":"15","/Users/patrickoconnor/Documents/code/instant-messenger/client/src/components/Home.js":"16","/Users/patrickoconnor/Documents/code/instant-messenger/client/src/reducers/authReducer.js":"17","/Users/patrickoconnor/Documents/code/instant-messenger/client/src/reducers/errorReducer.js":"18","/Users/patrickoconnor/Documents/code/instant-messenger/client/src/components/ConversationsPipeline.js":"19","/Users/patrickoconnor/Documents/code/instant-messenger/client/src/components/Messager.js":"20","/Users/patrickoconnor/Documents/code/instant-messenger/client/src/components/SingleConversationCard.js":"21","/Users/patrickoconnor/Documents/code/instant-messenger/client/src/components/Messages.js":"22","/Users/patrickoconnor/Documents/code/instant-messenger/client/src/components/TextInput.js":"23","/Users/patrickoconnor/Documents/code/instant-messenger/client/src/components/MessageBubble.js":"24"},{"size":820,"mtime":1611537856436,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":1609034702847,"results":"27","hashOfConfig":"26"},{"size":1811,"mtime":1617482177527,"results":"28","hashOfConfig":"26"},{"size":1135,"mtime":1616968196657,"results":"29","hashOfConfig":"26"},{"size":288,"mtime":1617501685764,"results":"30","hashOfConfig":"26"},{"size":242,"mtime":1612124062311,"results":"31","hashOfConfig":"26"},{"size":4794,"mtime":1618192927321,"results":"32","hashOfConfig":"26"},{"size":1810,"mtime":1617925425903,"results":"33","hashOfConfig":"26"},{"size":780,"mtime":1609471744642,"results":"34","hashOfConfig":"26"},{"size":207,"mtime":1617925425913,"results":"35","hashOfConfig":"26"},{"size":4487,"mtime":1618192927326,"results":"36","hashOfConfig":"26"},{"size":348,"mtime":1618192927317,"results":"37","hashOfConfig":"26"},{"size":446,"mtime":1617925425907,"results":"38","hashOfConfig":"26"},{"size":2507,"mtime":1617820412727,"results":"39","hashOfConfig":"26"},{"size":195,"mtime":1610500099814,"results":"40","hashOfConfig":"26"},{"size":4030,"mtime":1619060165187,"results":"41","hashOfConfig":"26"},{"size":1314,"mtime":1617925425911,"results":"42","hashOfConfig":"26"},{"size":498,"mtime":1617925425912,"results":"43","hashOfConfig":"26"},{"size":1391,"mtime":1618192927319,"results":"44","hashOfConfig":"26"},{"size":1329,"mtime":1617820412726,"results":"45","hashOfConfig":"26"},{"size":1544,"mtime":1618192927327,"results":"46","hashOfConfig":"26"},{"size":1428,"mtime":1618192927323,"results":"47","hashOfConfig":"26"},{"size":1732,"mtime":1617480881570,"results":"48","hashOfConfig":"26"},{"size":521,"mtime":1617820412726,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1gdjo31",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"52"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"52"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"/Users/patrickoconnor/Documents/code/instant-messenger/client/src/index.js",[],["109","110"],"/Users/patrickoconnor/Documents/code/instant-messenger/client/src/reportWebVitals.js",[],"/Users/patrickoconnor/Documents/code/instant-messenger/client/src/App.js",[],"/Users/patrickoconnor/Documents/code/instant-messenger/client/src/store.js",["111"],"import { createStore, applyMiddleware, compose } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport logger from \"redux-logger\";\nimport storage from \"redux-persist/lib/storage\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst middleware =\n  process.env.NODE_ENV === \"development\" ? [thunk, logger] : [thunk];\n\nlet devTools =\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\nif (process.env.NODE_ENV === \"prod\" || process.env.NODE_ENV === \"production\") {\n  devTools = (a) => a;\n}\n\nexport function configureStore() {\n  let store = createStore(\n    persistedReducer,\n    compose(\n      applyMiddleware(...middleware)\n      // window.navigator.userAgent.includes(\"Chrome\") &&\n      //   typeof window === \"object\"\n      //   ? window.__REDUX_DEVTOOLS_EXTENSION__ &&\n      //       window.__REDUX_DEVTOOLS_EXTENSION__()\n      //   : compose\n    )\n  );\n  let persistor = persistStore(store);\n  return { store, persistor };\n}\n","/Users/patrickoconnor/Documents/code/instant-messenger/client/src/socket.js",[],"/Users/patrickoconnor/Documents/code/instant-messenger/client/src/components/PrivateRoute.js",[],"/Users/patrickoconnor/Documents/code/instant-messenger/client/src/components/LogIn.js",["112"],"import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport PropTypes from \"prop-types\";\nimport SignUpModal from \"./SignUpModal\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\n// redux\nimport { authenticateUser } from \"../actions/authActions\";\nimport { clearError } from \"../actions/errorActions\";\nimport { connect } from \"react-redux\";\n\nconst ComponentWrapper = styled.div`\n  height: 100vh;\n  width: 100vw;\n  background-color: grey;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  background-image: url(images/login.jpg);\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n`;\n\nconst LoginCard = styled.div`\n  background-color: rgba(255, 255, 255, 0.5);\n  width: 25vw;\n  border-radius: 5px;\n  backdrop-filter: blur(2px);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 1rem;\n`;\n\nconst Form = styled.form`\n  width: 83%;\n  display: flex;\n  flex-direction: column;\n  padding-bottom: 1.4rem;\n`;\n\nconst Title = styled.h1`\n  font-weight: 200;\n  margin: 1rem 0 0 0;\n`;\n\nconst Span = styled.span`\n  font-weight: 200;\n  font-size: 1rem;\n  padding: 0.8rem;\n`;\n\nconst Link = styled.a`\n  text-decoration: none;\n`;\n\nconst TextFieldStyle = {\n  paddingBottom: \"0.6rem\",\n};\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} {...props} />;\n}\nclass LogIn extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    signUpModalIsOpen: false,\n  };\n\n  toggleModalOpen = async () => {\n    await this.setState({\n      signUpModalIsOpen: !this.state.signUpModalIsOpen,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const { username, password } = this.state;\n\n    if (!username || !password) {\n      return;\n    }\n\n    try {\n      this.props.authenticateUser(username, password);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  handleClose = () => {\n    this.props.clearError();\n  };\n\n  handleChange = (e) => {\n    e.preventDefault();\n\n    const key = e.target.name;\n    const value = e.target.value;\n\n    this.setState({\n      [key]: value,\n    });\n  };\n\n  render() {\n    if (this.props.isAuthenticated) return <Redirect to=\"/\" />;\n    return (\n      <ComponentWrapper>\n        <Snackbar\n          anchorOrigin={{\n            vertical: \"top\",\n            horizontal: \"right\",\n          }}\n          open={this.props.error !== null}\n          autoHideDuration={6000}\n          onClose={this.handleClose}\n        >\n          <Alert\n            severity={this.props.error == \"Unauthorized\" ? \"error\" : \"info\"}\n            onClose={this.handleClose}\n          >\n            {this.props.error}\n          </Alert>\n        </Snackbar>\n        <LoginCard>\n          <Title>Log In</Title>\n          <Form>\n            <TextField\n              type=\"username\"\n              name=\"username\"\n              label=\"Username\"\n              id=\"exampleEmail\"\n              variant=\"outlined\"\n              margin=\"dense\"\n              style={TextFieldStyle}\n              onChange={this.handleChange}\n            />\n            <TextField\n              type=\"password\"\n              name=\"password\"\n              label=\"Password\"\n              id=\"password\"\n              variant=\"outlined\"\n              margin=\"dense\"\n              style={TextFieldStyle}\n              onChange={this.handleChange}\n            />\n            <Button\n              color=\"primary\"\n              style={{\n                backgroundColor: \"rgb(22, 204, 152, 0.7)\",\n                color: \"white\",\n              }}\n              onClick={this.handleSubmit}\n            >\n              Let's Go!\n            </Button>\n          </Form>\n        </LoginCard>\n        <LoginCard>\n          <Span>\n            Not a member yet?{\" \"}\n            <Link\n              href=\"#\"\n              onClick={() => this.toggleModalOpen(this.state.signUpModalIsOpen)}\n            >\n              Sign Up\n            </Link>\n          </Span>\n          <SignUpModal\n            signUpModalIsOpen={this.state.signUpModalIsOpen}\n            toggleModalOpen={this.toggleModalOpen}\n          />\n        </LoginCard>\n      </ComponentWrapper>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error.error,\n});\n\nLogIn.propTypes = {\n  authenticateUser: PropTypes.func.isRequired,\n  clearError: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default connect(mapStateToProps, { authenticateUser, clearError })(\n  LogIn\n);\n","/Users/patrickoconnor/Documents/code/instant-messenger/client/src/actions/authActions.js",["113"],"import {\n  USER_LOADED,\n  USER_LOADING,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGOUT_SUCCESS,\n  REGISTER_SUCCESS,\n} from \"./types\";\nimport { returnError } from \"./errorActions\";\nimport axios from \"axios\";\naxios.defaults.withCredentials = true;\n\nexport const getUser = () => async (dispatch, getState) => {\n  dispatch(setUserLoading());\n\n  try {\n    const response = await axios.get(\"http://localhost:8080/user\");\n    dispatch({\n      type: USER_LOADED,\n      payload: response.data,\n    });\n  } catch (error) {\n    dispatch({\n      type: AUTH_ERROR,\n    });\n  }\n};\n\nexport const authenticateUser = (username, password) => async (dispatch) => {\n  dispatch(setUserLoading());\n\n  try {\n    const response = await axios.post(\"http://localhost:8080/user/login\", {\n      username,\n      password,\n    });\n\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: response.data,\n    });\n  } catch (error) {\n    dispatch({\n      type: AUTH_ERROR,\n    });\n    dispatch(returnError(error));\n  }\n};\n\nexport const logoutUser = () => async (dispatch) => {\n  dispatch(setUserLoading());\n\n  try {\n    const response = await axios.get(\"http://localhost:8080/user/logout\");\n    dispatch({\n      type: LOGOUT_SUCCESS,\n    });\n  } catch (error) {}\n};\n\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING,\n  };\n};\n\nexport const registerUser = (\n  username,\n  password,\n  email,\n  firstName,\n  lastName\n) => async (dispatch) => {\n  dispatch(setUserLoading());\n\n  try {\n    const response = await axios.post(\"http://localhost:8080/user\", {\n      username,\n      password,\n      email,\n      firstName,\n      lastName,\n    });\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: response.data,\n    });\n  } catch (error) {\n    dispatch({\n      type: AUTH_ERROR,\n    });\n    dispatch(returnError(error));\n  }\n};\n","/Users/patrickoconnor/Documents/code/instant-messenger/client/src/components/Wrapper.js",[],"/Users/patrickoconnor/Documents/code/instant-messenger/client/src/reducers/index.js",[],"/Users/patrickoconnor/Documents/code/instant-messenger/client/src/components/SignUpModal.js",["114"],"import React, { Component } from \"react\";\nimport Modal from \"@material-ui/core/Modal\";\nimport styled from \"styled-components\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport e from \"cors\";\nimport PropTypes from \"prop-types\";\n\n// redux\nimport { registerUser } from \"../actions/authActions\";\nimport { connect } from \"react-redux\";\n\nconst TextFieldStyle = {\n  paddingBottom: \"0.6rem\",\n};\n\nconst ModalBody = styled.div`\n  display: flex;\n  width: 25vw;\n  height: auto;\n  background-color: white;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst StyledModal = styled(Modal)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border-radius: 5px;\n`;\n\nconst ModalHeader = styled.span`\n  font-size: 1.3rem;\n  padding: 1rem;\n`;\n\nconst Form = styled.form`\n  width: 83%;\n  display: flex;\n  flex-direction: column;\n  padding-bottom: 1.4rem;\n`;\n\nclass SignUpModal extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const {\n      username,\n      password,\n      confirmPassword,\n      firstName,\n      lastName,\n      email,\n    } = this.state;\n\n    if (\n      !username ||\n      !password ||\n      !confirmPassword ||\n      !firstName ||\n      !lastName ||\n      !email\n    ) {\n      return;\n    }\n\n    if (password === confirmPassword) {\n      try {\n        this.props.registerUser(username, password, email, firstName, lastName);\n      } catch (error) {}\n    }\n  };\n\n  handleChange = async (e) => {\n    await this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <StyledModal\n          open={this.props.signUpModalIsOpen}\n          onClose={() => this.props.toggleModalOpen()}\n        >\n          <ModalBody>\n            <ModalHeader>Sign Up</ModalHeader>\n            <Form>\n              <TextField\n                type=\"username\"\n                name=\"username\"\n                label=\"Username\"\n                id=\"username\"\n                variant=\"outlined\"\n                margin=\"dense\"\n                style={TextFieldStyle}\n                onChange={this.handleChange}\n              />\n              <TextField\n                type=\"email\"\n                name=\"email\"\n                label=\"Email\"\n                id=\"exampleEmail\"\n                variant=\"outlined\"\n                margin=\"dense\"\n                style={TextFieldStyle}\n                onChange={this.handleChange}\n              />\n              <TextField\n                type=\"firstName\"\n                name=\"firstName\"\n                label=\"First Name\"\n                id=\"firstName\"\n                variant=\"outlined\"\n                margin=\"dense\"\n                style={TextFieldStyle}\n                onChange={this.handleChange}\n              />\n              <TextField\n                type=\"lastName\"\n                name=\"lastName\"\n                label=\"Last Name\"\n                id=\"lastName\"\n                variant=\"outlined\"\n                margin=\"dense\"\n                style={TextFieldStyle}\n                onChange={this.handleChange}\n              />\n              <TextField\n                type=\"password\"\n                name=\"password\"\n                label=\"Password\"\n                id=\"password\"\n                variant=\"outlined\"\n                margin=\"dense\"\n                style={TextFieldStyle}\n                onChange={this.handleChange}\n              />\n              <TextField\n                type=\"password\"\n                name=\"confirmPassword\"\n                label=\"Confirm Password\"\n                id=\"confirmPassword\"\n                variant=\"outlined\"\n                margin=\"dense\"\n                style={TextFieldStyle}\n                onChange={this.handleChange}\n              />\n              <Button\n                color=\"primary\"\n                style={{\n                  backgroundColor: \"rgb(22, 204, 152, 0.7)\",\n                  color: \"white\",\n                }}\n                onClick={this.handleSubmit}\n              >\n                Let's Go!\n              </Button>\n            </Form>\n          </ModalBody>\n        </StyledModal>\n      </div>\n    );\n  }\n}\n\nSignUpModal.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { registerUser })(SignUpModal);\n","/Users/patrickoconnor/Documents/code/instant-messenger/client/src/actions/errorActions.js",[],"/Users/patrickoconnor/Documents/code/instant-messenger/client/src/actions/types.js",[],"/Users/patrickoconnor/Documents/code/instant-messenger/client/src/components/NavigationBar.js",["115","116"],"import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport HomeOutlinedIcon from \"@material-ui/icons/HomeOutlined\";\nimport ExitToAppOutlinedIcon from \"@material-ui/icons/ExitToAppOutlined\";\nimport PersonOutlineOutlinedIcon from \"@material-ui/icons/PersonOutlineOutlined\";\nimport PropTypes from \"prop-types\";\n\nimport { logoutUser } from \"../actions/authActions\";\nimport { connect } from \"react-redux\";\n\nconst Nav = styled(Drawer)`\n  background-color: red;\n  display: block;\n  box-shadow: 10px 0 5px -2px #888;\n`;\n\nconst StyledNavItem = styled(ListItemIcon)`\n  display: flex;\n  justify-content: center;\n  margin-top: 1.5rem;\n`;\n\nconst Button = styled.button`\n  border: none;\n  background-color: white;\n`;\n\nconst LogOutIcon = styled(ExitToAppOutlinedIcon)`\n  color: rgb(22, 204, 152);\n\n  &:hover {\n    color: lightgreen;\n    transition: 0.3s;\n  }\n`;\n\nconst StyledListItem = styled(ListItem)``;\n\nclass NavigationBar extends Component {\n  render() {\n    return (\n      <div>\n        <Nav variant=\"permanent\" anchor=\"left\">\n          <List>\n            <StyledListItem>\n              <Link to=\"/\">\n                <StyledNavItem>\n                  <HomeOutlinedIcon\n                    fontSize=\"large\"\n                    style={{ color: \"rgb(22, 204, 152)\" }}\n                  />\n                </StyledNavItem>\n              </Link>\n            </StyledListItem>\n            <ListItem>\n              <Link to=\"/profile\">\n                <StyledNavItem>\n                  <PersonOutlineOutlinedIcon\n                    fontSize=\"large\"\n                    style={{ color: \"rgb(22, 204, 152)\" }}\n                  />\n                </StyledNavItem>\n              </Link>\n            </ListItem>\n            <ListItem>\n              <StyledNavItem>\n                <Button onClick={this.props.logoutUser}>\n                  <LogOutIcon fontSize=\"large\" />\n                </Button>\n              </StyledNavItem>\n            </ListItem>\n          </List>\n        </Nav>\n      </div>\n    );\n  }\n}\n\nNavigationBar.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { logoutUser })(NavigationBar);\n","/Users/patrickoconnor/Documents/code/instant-messenger/client/src/components/Profile.js",[],"/Users/patrickoconnor/Documents/code/instant-messenger/client/src/components/Home.js",["117","118"],"/Users/patrickoconnor/Documents/code/instant-messenger/client/src/reducers/authReducer.js",["119","120"],"import {\n  USER_LOADED,\n  USER_LOADING,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n} from \"../actions/types\";\n\nconst initialState = {\n  isAuthenticated: false,\n  loading: false,\n  user: {\n    id: null,\n    firstName: null,\n    lastName: null,\n    email: null,\n    username: null,\n  },\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOGOUT_SUCCESS:\n    case AUTH_ERROR:\n      return {\n        loading: false,\n        isAuthenticated: false,\n        user: {\n          id: null,\n          firstName: null,\n          lastName: null,\n          email: null,\n          username: null,\n        },\n      };\n    case USER_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case USER_LOADED:\n      return {\n        ...state,\n        loading: false,\n      };\n    case LOGIN_SUCCESS:\n    case REGISTER_SUCCESS:\n      return {\n        loading: false,\n        isAuthenticated: true,\n        user: {\n          id: action.payload._id,\n          firstName: action.payload.firstName,\n          lastName: action.payload.lastName,\n          email: action.payload.email,\n          username: action.payload.username,\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","/Users/patrickoconnor/Documents/code/instant-messenger/client/src/reducers/errorReducer.js",[],"/Users/patrickoconnor/Documents/code/instant-messenger/client/src/components/ConversationsPipeline.js",["121"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport SingleConversationCard from \"./SingleConversationCard\";\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\n\nconst Container = styled.div`\n  min-width: 25vw;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  height: 100vh;\n  background-color: lightslategrey;\n  overflow-y: scroll;\n`;\n\nconst AddButton = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  left: 25%;\n  top: 89.5%;\n  background-color: rgb(22, 204, 152);\n  z-index: 1;\n  width: 3rem;\n  height: 3rem;\n  justify-content: center;\n  align-items: center;\n  border-radius: 50%;\n  color: white;\n`;\n\nclass ConversationsPipeline extends React.Component {\n  render() {\n    return (\n      <Container>\n        {this.props.conversations.map((convo, index) => (\n          <SingleConversationCard\n            id={convo.conversation._id}\n            activeConversationId={this.props.activeConversationId}\n            conversation={convo}\n            toggleActiveConversation={this.props.toggleActiveConversation}\n            key={index}\n          />\n        ))}\n        <Link to=\"#\">\n          <AddButton>\n            <AddRoundedIcon />\n          </AddButton>\n        </Link>\n      </Container>\n    );\n  }\n}\n\nexport default ConversationsPipeline;\n","/Users/patrickoconnor/Documents/code/instant-messenger/client/src/components/Messager.js",[],"/Users/patrickoconnor/Documents/code/instant-messenger/client/src/components/SingleConversationCard.js",["122"],"import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Name = styled.span`\n  font-size: 1rem;\n  font-weight: 200;\n  color: rgb(22, 204, 152);\n`;\n\nconst LatestMessage = styled.span`\n  font-size: 0.75rem;\n  font-weight: 200;\n  color: black;\n`;\n\nconst Time = styled.span`\n  font-size: 0.75rem;\n  font-weight: 200;\n  text-decoration: none;\n`;\n\nconst Button = styled.a`\n  background-color: white;\n  border: ${(props) =>\n    props.activeConversationId === props.id\n      ? \"solid rgb(22, 204, 152) 4px\"\n      : \"none\"};\n  display: flex;\n  width: 95%;\n  min-height: 4rem;\n  flex-direction: column;\n  justify-content: space-evenly;\n  border-radius: 0.15rem;\n  margin-top: 0.5rem;\n  margin-bottom: 0.5rem;\n  padding-left: 0.5rem;\n  text-decoration: none;\n\n  &:hover {\n    background-color: rgb(22, 204, 152);\n    transition: 0.3s;\n  }\n\n  &:hover > span {\n    color: white;\n    transition: 0.3s;\n  }\n`;\n\nconst SingleConversationCard = (props) => {\n  return (\n    <Button\n      href=\"#\"\n      onClick={() => props.toggleActiveConversation(props.id)}\n      id={props.id}\n      activeConversationId={props.activeConversationId}\n    >\n      <Name className=\"child\">{`${props.conversation.title.firstName} ${props.conversation.title.lastName}`}</Name>\n      <LatestMessage className=\"child\">\n        {props.conversation.latestMessage[0].message}\n      </LatestMessage>\n      {/* <Time className=\"child\">\n        {props.time ? <span>{props.time}</span> : null}\n      </Time> */}\n    </Button>\n  );\n};\n\nexport default SingleConversationCard;\n","/Users/patrickoconnor/Documents/code/instant-messenger/client/src/components/Messages.js",["123"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\n\nimport MessageBubble from \"./MessageBubble\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column-reverse;\n  color: black;\n  align-items: flex-start;\n  height: 100%;\n  overflow-y: scroll;\n  margin: 1rem;\n`;\n\nconst AlignmentContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: ${(props) =>\n    props.authorIsCurrentUser ? \"flex-end\" : \"flex-start\"};\n  justify-content: ${(props) =>\n    props.authorIsCurrentUser ? \"flex-end\" : \"flex-start\"};\n  width: 100%;\n  height: auto;\n`;\n\nclass Messages extends React.Component {\n  authorIsCurrentUser = (currentUser, author) => {\n    if (currentUser === author) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  render() {\n    return (\n      <Wrapper>\n        {this.props.messages.messages.reverse().map((message) => (\n          <AlignmentContainer\n            authorIsCurrentUser={this.authorIsCurrentUser(\n              this.props.currentUser,\n              message.author\n            )}\n          >\n            <MessageBubble\n              message={message.message}\n              authorIsCurrentUser={this.authorIsCurrentUser(\n                this.props.currentUser,\n                message.author\n              )}\n            />\n          </AlignmentContainer>\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default Messages;\n","/Users/patrickoconnor/Documents/code/instant-messenger/client/src/components/TextInput.js",["124","125","126","127","128"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport TextField from \"@material-ui/core/TextField\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SendOutlinedIcon from \"@material-ui/icons/SendOutlined\";\nimport Input from \"@material-ui/core/Input\";\nimport FilledInput from \"@material-ui/core/FilledInput\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nclass TextInput extends React.Component {\n  state = {\n    message: \"\",\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  render() {\n    return (\n      <FormControl fullWidth variant=\"outlined\">\n        <InputLabel>Message</InputLabel>\n        <OutlinedInput\n          id=\"outlined-adornment-password\"\n          type=\"text\"\n          name=\"message\"\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <IconButton edge=\"end\">\n                <SendOutlinedIcon\n                  style={{\n                    color: \"rgb(22, 204, 152)\",\n                  }}\n                  onClick={() =>\n                    this.props.onMessage(\n                      this.state.message,\n                      this.props.activeConversationId\n                    )\n                  }\n                />\n              </IconButton>\n            </InputAdornment>\n          }\n          onChange={(e) => this.handleChange(e)}\n          labelWidth={70}\n        />\n      </FormControl>\n    );\n  }\n}\n\nexport default TextInput;\n","/Users/patrickoconnor/Documents/code/instant-messenger/client/src/components/MessageBubble.js",[],{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":21,"column":3,"nodeType":"135","messageId":"136","endLine":21,"endColumn":11},{"ruleId":"137","severity":1,"message":"138","line":129,"column":40,"nodeType":"139","messageId":"140","endLine":129,"endColumn":42},{"ruleId":"133","severity":1,"message":"141","line":54,"column":11,"nodeType":"135","messageId":"136","endLine":54,"endColumn":19},{"ruleId":"133","severity":1,"message":"142","line":6,"column":8,"nodeType":"135","messageId":"136","endLine":6,"endColumn":9},{"ruleId":"133","severity":1,"message":"143","line":5,"column":8,"nodeType":"135","messageId":"136","endLine":5,"endColumn":15},{"ruleId":"133","severity":1,"message":"144","line":8,"column":8,"nodeType":"135","messageId":"136","endLine":8,"endColumn":20},{"ruleId":"133","severity":1,"message":"145","line":88,"column":9,"nodeType":"135","messageId":"136","endLine":88,"endColumn":18},{"ruleId":"137","severity":1,"message":"146","line":89,"column":25,"nodeType":"139","messageId":"140","endLine":89,"endColumn":27},{"ruleId":"133","severity":1,"message":"147","line":6,"column":3,"nodeType":"135","messageId":"136","endLine":6,"endColumn":13},{"ruleId":"133","severity":1,"message":"148","line":9,"column":3,"nodeType":"135","messageId":"136","endLine":9,"endColumn":16},{"ruleId":"133","severity":1,"message":"149","line":4,"column":8,"nodeType":"135","messageId":"136","endLine":4,"endColumn":13},{"ruleId":"133","severity":1,"message":"150","line":16,"column":7,"nodeType":"135","messageId":"136","endLine":16,"endColumn":11},{"ruleId":"133","severity":1,"message":"149","line":3,"column":8,"nodeType":"135","messageId":"136","endLine":3,"endColumn":13},{"ruleId":"133","severity":1,"message":"151","line":2,"column":8,"nodeType":"135","messageId":"136","endLine":2,"endColumn":14},{"ruleId":"133","severity":1,"message":"152","line":3,"column":8,"nodeType":"135","messageId":"136","endLine":3,"endColumn":17},{"ruleId":"133","severity":1,"message":"153","line":6,"column":8,"nodeType":"135","messageId":"136","endLine":6,"endColumn":13},{"ruleId":"133","severity":1,"message":"154","line":7,"column":8,"nodeType":"135","messageId":"136","endLine":7,"endColumn":19},{"ruleId":"133","severity":1,"message":"155","line":11,"column":8,"nodeType":"135","messageId":"136","endLine":11,"endColumn":22},"no-native-reassign",["156"],"no-negated-in-lhs",["157"],"no-unused-vars","'devTools' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'response' is assigned a value but never used.","'e' is defined but never used.","'Divider' is defined but never used.","'ListItemText' is defined but never used.","'recipient' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'LOGIN_FAIL' is defined but never used.","'REGISTER_FAIL' is defined but never used.","'axios' is defined but never used.","'Time' is assigned a value but never used.","'styled' is defined but never used.","'TextField' is defined but never used.","'Input' is defined but never used.","'FilledInput' is defined but never used.","'FormHelperText' is defined but never used.","no-global-assign","no-unsafe-negation"]
[{"/Users/patrickoconnor/Documents/code/instant-messenger/client/src/index.js":"1","/Users/patrickoconnor/Documents/code/instant-messenger/client/src/reportWebVitals.js":"2","/Users/patrickoconnor/Documents/code/instant-messenger/client/src/App.js":"3","/Users/patrickoconnor/Documents/code/instant-messenger/client/src/components/LogIn.js":"4","/Users/patrickoconnor/Documents/code/instant-messenger/client/src/components/Wrapper.js":"5","/Users/patrickoconnor/Documents/code/instant-messenger/client/src/components/NavigationBar.js":"6","/Users/patrickoconnor/Documents/code/instant-messenger/client/src/components/Profile.js":"7","/Users/patrickoconnor/Documents/code/instant-messenger/client/src/components/Home.js":"8","/Users/patrickoconnor/Documents/code/instant-messenger/client/src/components/ConversationsPipeline.js":"9","/Users/patrickoconnor/Documents/code/instant-messenger/client/src/components/SingleConversationCard.js":"10","/Users/patrickoconnor/Documents/code/instant-messenger/client/src/components/Messager.js":"11","/Users/patrickoconnor/Documents/code/instant-messenger/client/src/components/TextInput.js":"12","/Users/patrickoconnor/Documents/code/instant-messenger/client/src/components/Messages.js":"13","/Users/patrickoconnor/Documents/code/instant-messenger/client/src/components/MessageBubble.js":"14","/Users/patrickoconnor/Documents/code/instant-messenger/client/src/components/PrivateRoute.js":"15","/Users/patrickoconnor/Documents/code/instant-messenger/client/src/store.js":"16","/Users/patrickoconnor/Documents/code/instant-messenger/client/src/reducers/index.js":"17","/Users/patrickoconnor/Documents/code/instant-messenger/client/src/reducers/authReducer.js":"18","/Users/patrickoconnor/Documents/code/instant-messenger/client/src/actions/types.js":"19","/Users/patrickoconnor/Documents/code/instant-messenger/client/src/actions/authActions.js":"20","/Users/patrickoconnor/Documents/code/instant-messenger/client/src/socket.js":"21"},{"size":820,"mtime":1611537856436,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1609034702847,"results":"24","hashOfConfig":"23"},{"size":1728,"mtime":1614913864414,"results":"25","hashOfConfig":"23"},{"size":3436,"mtime":1614730132236,"results":"26","hashOfConfig":"23"},{"size":780,"mtime":1609471744642,"results":"27","hashOfConfig":"23"},{"size":2394,"mtime":1612123192569,"results":"28","hashOfConfig":"23"},{"size":195,"mtime":1610500099814,"results":"29","hashOfConfig":"23"},{"size":2737,"mtime":1616029448079,"results":"30","hashOfConfig":"23"},{"size":1596,"mtime":1615173123084,"results":"31","hashOfConfig":"23"},{"size":1431,"mtime":1615175148816,"results":"32","hashOfConfig":"23"},{"size":1344,"mtime":1616029479771,"results":"33","hashOfConfig":"23"},{"size":1751,"mtime":1615947359371,"results":"34","hashOfConfig":"23"},{"size":1410,"mtime":1616029708688,"results":"35","hashOfConfig":"23"},{"size":503,"mtime":1610917025883,"results":"36","hashOfConfig":"23"},{"size":242,"mtime":1612124062311,"results":"37","hashOfConfig":"23"},{"size":882,"mtime":1611456612611,"results":"38","hashOfConfig":"23"},{"size":141,"mtime":1611458375563,"results":"39","hashOfConfig":"23"},{"size":1250,"mtime":1614728266196,"results":"40","hashOfConfig":"23"},{"size":260,"mtime":1611466550500,"results":"41","hashOfConfig":"23"},{"size":1326,"mtime":1613705776619,"results":"42","hashOfConfig":"23"},{"size":288,"mtime":1615256615612,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1gdjo31",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"/Users/patrickoconnor/Documents/code/instant-messenger/client/src/index.js",[],["93","94"],"/Users/patrickoconnor/Documents/code/instant-messenger/client/src/reportWebVitals.js",[],"/Users/patrickoconnor/Documents/code/instant-messenger/client/src/App.js",["95"],"import logo from \"./logo.svg\";\nimport styled from \"styled-components\";\nimport \"./App.css\";\nimport { Component } from \"react\";\nimport React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\n// redux\nimport { getUser } from \"./actions/authActions\";\nimport { connect } from \"react-redux\";\nimport { configureStore } from \"./store\";\nimport PropTypes from \"prop-types\";\nimport socket from \"./socket\";\n\n// components\nimport LogIn from \"./components/LogIn\";\nimport Wrapper from \"./components/Wrapper\";\nimport PrivateRoute from \"./components/PrivateRoute\";\n\nconst AppWrapper = styled.div`\n  height: 100vh;\n  width: 100vw;\n  background-color: lightgrey;\n  margin: 0;\n  padding: 0;\n`;\n\nconst { store } = configureStore();\n\nclass App extends Component {\n  componentDidMount() {\n    store.dispatch(getUser());\n  }\n\n  render() {\n    if (this.props.isAuthenticated) {\n      socket.connect();\n    }\n    return (\n      <AppWrapper>\n        <BrowserRouter>\n          <Switch>\n            <Route\n              path=\"/login\"\n              component={LogIn}\n              isLoggedIn={this.props.isAuthenticated}\n            />\n            <PrivateRoute\n              exact\n              path=\"/\"\n              component={Wrapper}\n              isLoggedIn={this.props.isAuthenticated}\n            />\n          </Switch>\n        </BrowserRouter>\n      </AppWrapper>\n    );\n  }\n}\n\nApp.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  loading: PropTypes.bool.isRequired,\n  user: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  loading: state.auth.loading,\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps, null)(App);\n","/Users/patrickoconnor/Documents/code/instant-messenger/client/src/components/LogIn.js",[],"/Users/patrickoconnor/Documents/code/instant-messenger/client/src/components/Wrapper.js",[],"/Users/patrickoconnor/Documents/code/instant-messenger/client/src/components/NavigationBar.js",["96","97"],"import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport HomeOutlinedIcon from \"@material-ui/icons/HomeOutlined\";\nimport ExitToAppOutlinedIcon from \"@material-ui/icons/ExitToAppOutlined\";\nimport PersonOutlineOutlinedIcon from \"@material-ui/icons/PersonOutlineOutlined\";\nimport PropTypes from \"prop-types\";\n\nimport { logoutUser } from \"../actions/authActions\";\nimport { connect } from \"react-redux\";\n\nconst Nav = styled(Drawer)`\n  background-color: red;\n  display: block;\n  box-shadow: 10px 0 5px -2px #888;\n`;\n\nconst StyledNavItem = styled(ListItemIcon)`\n  display: flex;\n  justify-content: center;\n  margin-top: 1.5rem;\n`;\n\nconst StyledListItem = styled(ListItem)``;\n\nclass NavigationBar extends Component {\n  render() {\n    return (\n      <div>\n        <Nav variant=\"permanent\" anchor=\"left\">\n          <List>\n            <StyledListItem>\n              <Link to=\"/\">\n                <StyledNavItem>\n                  <HomeOutlinedIcon\n                    fontSize=\"large\"\n                    style={{ color: \"rgb(22, 204, 152)\" }}\n                  />\n                </StyledNavItem>\n              </Link>\n            </StyledListItem>\n            <ListItem>\n              <Link to=\"/profile\">\n                <StyledNavItem>\n                  <PersonOutlineOutlinedIcon\n                    fontSize=\"large\"\n                    style={{ color: \"rgb(22, 204, 152)\" }}\n                  />\n                </StyledNavItem>\n              </Link>\n            </ListItem>\n            <ListItem>\n              <StyledNavItem>\n                <button onClick={this.props.logoutUser}>\n                  <ExitToAppOutlinedIcon\n                    fontSize=\"large\"\n                    style={{ color: \"rgb(22, 204, 152)\" }}\n                  />\n                </button>\n              </StyledNavItem>\n            </ListItem>\n          </List>\n        </Nav>\n      </div>\n    );\n  }\n}\n\nNavigationBar.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { logoutUser })(NavigationBar);\n","/Users/patrickoconnor/Documents/code/instant-messenger/client/src/components/Profile.js",[],"/Users/patrickoconnor/Documents/code/instant-messenger/client/src/components/Home.js",["98"],"/Users/patrickoconnor/Documents/code/instant-messenger/client/src/components/ConversationsPipeline.js",[],"/Users/patrickoconnor/Documents/code/instant-messenger/client/src/components/SingleConversationCard.js",["99"],"import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Name = styled.span`\n  font-size: 1.8rem;\n  font-weight: 200;\n  color: rgb(22, 204, 152);\n`;\n\nconst LatestMessage = styled.span`\n  font-size: 1rem;\n  font-weight: 200;\n`;\n\nconst Time = styled.span`\n  font-size: 0.75rem;\n  font-weight: 200;\n  text-decoration: none;\n`;\n\nconst Button = styled.a`\n  background-color: ${(props) =>\n    props.activeConversationId && props.activeConversationId === props.id\n      ? \"rgb(22, 204, 152)\"\n      : \"white\"};\n  display: flex;\n  width: 95%;\n  min-height: 20vh;\n  flex-direction: column;\n  justify-content: space-evenly;\n  border-radius: 0.15rem;\n  margin-top: 0.5rem;\n  margin-bottom: 0.5rem;\n  padding: 1rem;\n  text-decoration: none;\n\n  &:hover {\n    background-color: rgb(22, 204, 152);\n    transition: 0.3s;\n  }\n\n  &:hover > span {\n    color: white;\n    transition: 0.3s;\n  }\n`;\n\nconst SingleConversationCard = (props) => {\n  return (\n    <Button href=\"#\" onClick={() => props.toggleActiveConversation(props.id)}>\n      <Name className=\"child\">{`${props.conversation.title.firstName} ${props.conversation.title.lastName}`}</Name>\n      <LatestMessage className=\"child\">\n        {props.conversation.latestMessage[0].message}\n      </LatestMessage>\n      {/* <Time className=\"child\">\n        {props.time ? <span>{props.time}</span> : null}\n      </Time> */}\n    </Button>\n  );\n};\n\nexport default SingleConversationCard;\n","/Users/patrickoconnor/Documents/code/instant-messenger/client/src/components/Messager.js",[],"/Users/patrickoconnor/Documents/code/instant-messenger/client/src/components/TextInput.js",["100","101","102","103","104"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport TextField from \"@material-ui/core/TextField\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SendOutlinedIcon from \"@material-ui/icons/SendOutlined\";\nimport Input from \"@material-ui/core/Input\";\nimport FilledInput from \"@material-ui/core/FilledInput\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nclass TextInput extends React.Component {\n  state = {\n    message: \"\",\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  render() {\n    return (\n      <FormControl fullWidth variant=\"outlined\" multiline rows={4}>\n        <InputLabel>Message</InputLabel>\n        <OutlinedInput\n          id=\"outlined-adornment-password\"\n          type=\"text\"\n          name=\"message\"\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <IconButton edge=\"end\">\n                <SendOutlinedIcon\n                  style={{\n                    color: \"rgb(22, 204, 152)\",\n                  }}\n                  onClick={() =>\n                    this.props.onMessage(\n                      this.state.message,\n                      this.props.activeConversationId\n                    )\n                  }\n                />\n              </IconButton>\n            </InputAdornment>\n          }\n          onChange={(e) => this.handleChange(e)}\n          labelWidth={70}\n        />\n      </FormControl>\n    );\n  }\n}\n\nexport default TextInput;\n","/Users/patrickoconnor/Documents/code/instant-messenger/client/src/components/Messages.js",["105"],"/Users/patrickoconnor/Documents/code/instant-messenger/client/src/components/MessageBubble.js",[],"/Users/patrickoconnor/Documents/code/instant-messenger/client/src/components/PrivateRoute.js",[],"/Users/patrickoconnor/Documents/code/instant-messenger/client/src/store.js",[],"/Users/patrickoconnor/Documents/code/instant-messenger/client/src/reducers/index.js",[],"/Users/patrickoconnor/Documents/code/instant-messenger/client/src/reducers/authReducer.js",["106"],"import {\n  USER_LOADED,\n  USER_LOADING,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n} from \"../actions/types\";\n\nconst initialState = {\n  isAuthenticated: false,\n  loading: false,\n  user: {\n    id: null,\n    firstName: null,\n    lastName: null,\n    email: null,\n    username: null,\n  },\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOGOUT_SUCCESS:\n    case AUTH_ERROR:\n      return {\n        loading: false,\n        isAuthenticated: false,\n        user: {\n          id: null,\n          firstName: null,\n          lastName: null,\n          email: null,\n          username: null,\n        },\n      };\n    case USER_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case USER_LOADED:\n      return {\n        ...state,\n        loading: false,\n      };\n    case LOGIN_SUCCESS:\n      return {\n        loading: false,\n        isAuthenticated: true,\n        user: {\n          id: action.payload._id,\n          firstName: action.payload.firstName,\n          lastName: action.payload.lastName,\n          email: action.payload.email,\n          username: action.payload.username,\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","/Users/patrickoconnor/Documents/code/instant-messenger/client/src/actions/types.js",[],"/Users/patrickoconnor/Documents/code/instant-messenger/client/src/actions/authActions.js",["107","108","109","110"],"import {\n  USER_LOADED,\n  USER_LOADING,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n  REGISTER_SUCCESS,\n} from \"./types\";\nimport axios from \"axios\";\nimport socket from \"../socket\";\naxios.defaults.withCredentials = true;\n\nexport const getUser = () => async (dispatch, getState) => {\n  dispatch(setUserLoading());\n\n  try {\n    const response = await axios.get(\"http://localhost:8080/user\");\n    dispatch({\n      type: USER_LOADED,\n      payload: response.data,\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: AUTH_ERROR,\n    });\n  }\n};\n\nexport const authenticateUser = (username, password) => async (dispatch) => {\n  dispatch(setUserLoading());\n\n  try {\n    const response = await axios.post(\"http://localhost:8080/user/login\", {\n      username,\n      password,\n    });\n\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: response.data,\n    });\n  } catch (error) {\n    dispatch({\n      type: AUTH_ERROR,\n    });\n  }\n};\n\nexport const logoutUser = () => async (dispatch) => {\n  dispatch(setUserLoading());\n\n  try {\n    const response = await axios.get(\"http://localhost:8080/user/logout\");\n    dispatch({\n      type: LOGOUT_SUCCESS,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING,\n  };\n};\n","/Users/patrickoconnor/Documents/code/instant-messenger/client/src/socket.js",[],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":1,"column":8,"nodeType":"117","messageId":"118","endLine":1,"endColumn":12},{"ruleId":"115","severity":1,"message":"119","line":5,"column":8,"nodeType":"117","messageId":"118","endLine":5,"endColumn":15},{"ruleId":"115","severity":1,"message":"120","line":8,"column":8,"nodeType":"117","messageId":"118","endLine":8,"endColumn":20},{"ruleId":"115","severity":1,"message":"121","line":4,"column":8,"nodeType":"117","messageId":"118","endLine":4,"endColumn":14},{"ruleId":"115","severity":1,"message":"122","line":15,"column":7,"nodeType":"117","messageId":"118","endLine":15,"endColumn":11},{"ruleId":"115","severity":1,"message":"123","line":2,"column":8,"nodeType":"117","messageId":"118","endLine":2,"endColumn":14},{"ruleId":"115","severity":1,"message":"124","line":3,"column":8,"nodeType":"117","messageId":"118","endLine":3,"endColumn":17},{"ruleId":"115","severity":1,"message":"125","line":6,"column":8,"nodeType":"117","messageId":"118","endLine":6,"endColumn":13},{"ruleId":"115","severity":1,"message":"126","line":7,"column":8,"nodeType":"117","messageId":"118","endLine":7,"endColumn":19},{"ruleId":"115","severity":1,"message":"127","line":11,"column":8,"nodeType":"117","messageId":"118","endLine":11,"endColumn":22},{"ruleId":"115","severity":1,"message":"128","line":3,"column":8,"nodeType":"117","messageId":"118","endLine":3,"endColumn":13},{"ruleId":"115","severity":1,"message":"129","line":6,"column":3,"nodeType":"117","messageId":"118","endLine":6,"endColumn":13},{"ruleId":"115","severity":1,"message":"129","line":6,"column":3,"nodeType":"117","messageId":"118","endLine":6,"endColumn":13},{"ruleId":"115","severity":1,"message":"130","line":8,"column":3,"nodeType":"117","messageId":"118","endLine":8,"endColumn":19},{"ruleId":"115","severity":1,"message":"121","line":11,"column":8,"nodeType":"117","messageId":"118","endLine":11,"endColumn":14},{"ruleId":"115","severity":1,"message":"131","line":55,"column":11,"nodeType":"117","messageId":"118","endLine":55,"endColumn":19},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Divider' is defined but never used.","'ListItemText' is defined but never used.","'socket' is defined but never used.","'Time' is assigned a value but never used.","'styled' is defined but never used.","'TextField' is defined but never used.","'Input' is defined but never used.","'FilledInput' is defined but never used.","'FormHelperText' is defined but never used.","'axios' is defined but never used.","'LOGIN_FAIL' is defined but never used.","'REGISTER_SUCCESS' is defined but never used.","'response' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]